/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankAccountListRelationFilter } from "../../bankAccount/base/BankAccountListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CreditCardListRelationFilter } from "../../creditCard/base/CreditCardListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { LoanListRelationFilter } from "../../loan/base/LoanListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => BankAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BankAccountListRelationFilter)
  @IsOptional()
  @Field(() => BankAccountListRelationFilter, {
    nullable: true,
  })
  bankAccounts?: BankAccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CreditCardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CreditCardListRelationFilter)
  @IsOptional()
  @Field(() => CreditCardListRelationFilter, {
    nullable: true,
  })
  creditCards?: CreditCardListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LoanListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LoanListRelationFilter)
  @IsOptional()
  @Field(() => LoanListRelationFilter, {
    nullable: true,
  })
  loans?: LoanListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
